{"ast":null,"code":"'use strict';\n\nvar callBound = require('call-bound');\n\n/** @type {(receiver: ThisParameterType<typeof String.prototype.valueOf>, ...args: Parameters<typeof String.prototype.valueOf>) => ReturnType<typeof String.prototype.valueOf>} */\nvar $strValueOf = callBound('String.prototype.valueOf');\n\n/** @type {import('.')} */\nvar tryStringObject = function tryStringObject(value) {\n  try {\n    $strValueOf(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n/** @type {(receiver: ThisParameterType<typeof Object.prototype.toString>, ...args: Parameters<typeof Object.prototype.toString>) => ReturnType<typeof Object.prototype.toString>} */\nvar $toString = callBound('Object.prototype.toString');\nvar strClass = '[object String]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\n/** @type {import('.')} */\nmodule.exports = function isString(value) {\n  if (typeof value === 'string') {\n    return true;\n  }\n  if (!value || typeof value !== 'object') {\n    return false;\n  }\n  return hasToStringTag ? tryStringObject(value) : $toString(value) === strClass;\n};","map":{"version":3,"names":["callBound","require","$strValueOf","tryStringObject","value","e","$toString","strClass","hasToStringTag","module","exports","isString"],"sources":["C:/Users/luca/OneDrive/Berufsschule/TBZ/m450/24.10/recipe-planner-fronend-and-backend/recipe-planner-fronend/node_modules/is-string/index.js"],"sourcesContent":["'use strict';\n\nvar callBound = require('call-bound');\n\n/** @type {(receiver: ThisParameterType<typeof String.prototype.valueOf>, ...args: Parameters<typeof String.prototype.valueOf>) => ReturnType<typeof String.prototype.valueOf>} */\nvar $strValueOf = callBound('String.prototype.valueOf');\n\n/** @type {import('.')} */\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\t$strValueOf(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n/** @type {(receiver: ThisParameterType<typeof Object.prototype.toString>, ...args: Parameters<typeof Object.prototype.toString>) => ReturnType<typeof Object.prototype.toString>} */\nvar $toString = callBound('Object.prototype.toString');\nvar strClass = '[object String]';\nvar hasToStringTag = require('has-tostringtag/shams')();\n\n/** @type {import('.')} */\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') {\n\t\treturn true;\n\t}\n\tif (!value || typeof value !== 'object') {\n\t\treturn false;\n\t}\n\treturn hasToStringTag ? tryStringObject(value) : $toString(value) === strClass;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAErC;AACA,IAAIC,WAAW,GAAGF,SAAS,CAAC,0BAA0B,CAAC;;AAEvD;AACA,IAAIG,eAAe,GAAG,SAASA,eAAeA,CAACC,KAAK,EAAE;EACrD,IAAI;IACHF,WAAW,CAACE,KAAK,CAAC;IAClB,OAAO,IAAI;EACZ,CAAC,CAAC,OAAOC,CAAC,EAAE;IACX,OAAO,KAAK;EACb;AACD,CAAC;AACD;AACA,IAAIC,SAAS,GAAGN,SAAS,CAAC,2BAA2B,CAAC;AACtD,IAAIO,QAAQ,GAAG,iBAAiB;AAChC,IAAIC,cAAc,GAAGP,OAAO,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAEvD;AACAQ,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQA,CAACP,KAAK,EAAE;EACzC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC9B,OAAO,IAAI;EACZ;EACA,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACxC,OAAO,KAAK;EACb;EACA,OAAOI,cAAc,GAAGL,eAAe,CAACC,KAAK,CAAC,GAAGE,SAAS,CAACF,KAAK,CAAC,KAAKG,QAAQ;AAC/E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}